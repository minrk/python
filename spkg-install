#! /bin/sh

if [ "$SAGE_LOCAL" = "" ]; then
   echo "SAGE_LOCAL undefined ... exiting";
   echo "Maybe run 'sage -sh'?"
   exit 1
fi

set -e

cp patches/locale.py src/Lib/locale.py
cp patches/Makefile.pre.in src/Makefile.pre.in
cp patches/sdist.py src/Lib/distutils/command/sdist.py
cp patches/socket.py src/Lib/socket.py
cp patches/pickle.py src/Lib/pickle.py
cp patches/cPickle.c src/Modules/cPickle.c
cp patches/Modules.socketmodule.c src/Modules/socketmodule.c
# The following patch for fixing broken readline behavior on Itanium
# Linux definitely does *not* work on anything else.
if [ "`uname -m`" = "ia64" -a "`uname`" = "Linux" ]; then
    echo "Updating readline.c for Linux/Itanium"
    cp patches/readline.c-Itanium-fix src/Modules/readline.c
else
    # Readline patch: http://bugs.python.org/file14599/python-2.6-readline.patch
    # Associated bug: http://bugs.python.org/issue5833
    #
    # Committed to Python as r75747 in the py26-maint branch, but not
    # in time for 2.6.4 -- so we can remove this patch the next time
    # we update Python in Sage.
    cp patches/readline.c-spacebug src/Modules/readline.c
fi

# We are setting LDFLAGS and CPPFLAGS so that we pick up Qsnake's readline
LDFLAGS="-L$SPKG_LOCAL/lib $LDFLAGS"
export LDFLAGS

CPPFLAGS="-I$SPKG_LOCAL/include $CPPFLAGS"
export CPPFLAGS

# Program around weird bug in build process:
#      Apparently if you have this:
#         export DISTUTILS_DEBUG=1
#      in your environment variables, the build craps out.  No idea why this
#       is.
#       -- Yi Qiang
#
# This bug was fixed in Python, but not yet in Python 2.6.4. So this fix
# can be removed the next time we upgrade our version of Python. See
#
#   http://bugs.python.org/issue6954
#
# for the fix.
#
unset DISTUTILS_DEBUG


cd src

touch Include/*

build()
{
    rm -f "$SAGE_LOCAL"/lib/libpython*

    EXTRAFLAGS="$EXTRAFLAGS --enable-shared"; export EXTRAFLAGS

    if [ `uname` = "Darwin" ]; then
        if [ "x$SAGE64" = xyes ]; then
            echo "64 bit OSX build enabled"
            OPT="-g -O3 -m64 -Wall -Wstrict-prototypes"; export OPT
            ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL" \
	    --enable-unicode=ucs4 --with-gcc="gcc -m64" --disable-toolbox-glue
        else
            ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL"  \
	    --enable-unicode=ucs4 --disable-toolbox-glue
        fi
    elif [ `uname` = "SunOS" ]; then
        if [ "x$SAGE64" = xyes ]; then
            echo "64 bit Open Solaris build enabled"
            OPT="-g -O3 -m64 -Wall -Wstrict-prototypes"; export OPT
            ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL"  \
            --enable-unicode=ucs4 --with-gcc="gcc -m64"
        else
            ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL"  \
            --enable-unicode=ucs4
        fi
    else
        ./configure $EXTRAFLAGS --prefix="$SAGE_LOCAL"  --enable-unicode=ucs4 CC="$CC $CFLAGS" CXX="$CXX $CXXFLAGS"
    fi


    make

    # the "-i" is crucial, esp. in the case of a major upgrade
    make -i install
}

build

cd $SAGE_LOCAL/lib

rm -rf python/python2.6 python/python2.5 python/python python python2.4 python2.5
ln -s python2.6 python

# Make sure extension modules were built correctly.
python -c "import math"

# Make sure sufficient crypto support is available in the built python.
# This is critical.
python -c "import hashlib"

# Make sure HTTPS works
python -c "import httplib; assert hasattr(httplib, 'HTTPS')"
